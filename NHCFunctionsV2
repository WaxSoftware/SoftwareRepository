-----------------------------------------------------
local RunService = game:GetService( 'RunService' )
local ReplicatedStorage = game:GetService( 'ReplicatedStorage' )
local UserInputService = game:GetService( 'UserInputService' )
local Tweening = require(game.Players.LocalPlayer:FindFirstChild("Tweening", true))
local vehiclesModule = require(game.ReplicatedStorage.Databases.Vehicles)
local BankController = require(game.Players.LocalPlayer:FindFirstChild("BankController", true))
local Remotes = ReplicatedStorage.Remotes
local Player = game.Players.LocalPlayer
-----------------------------------------------------

_G.CashGrabLoaded = false
_G.CashGrab = false


-- Cash Functions
-----------------------------------------------------
function WithdrawCash(Amount)
  local args = {[1] = "635", [2] = "Bank", [3] = "Cash", [4] = Amount}
  Remotes:FindFirstChild("BankLocalTransfer"):FireServer(unpack(args))
end

function DepositCash(Amount)
  local Amount = BankController.GetBalance("Cash")
  local args = {[1] = "635", [2] = "Cash", [3] = "Bank", [4] = Amount}
   game:GetService("ReplicatedStorage").Remotes:FindFirstChild("BankLocalTransfer"):FireServer(unpack(args))
end

function GrabWallet()
    
  for _,wallet in(game.workspace:GetChildren()) do
      if wallet.Name == 'Cash' and _G.CashGrab then
      local check = wallet
      firetouchinterest(Player.Character.HumanoidRootPart, wallet)
      wallet.CanCollide = false
      wallet.Position = Player.Character.HumanoidRootPart.Position
      end
  end
  
end

function GrabCash()
  if _G.CashGrabLoaded then
      Notify('CashGrab was already loaded.')
      return
  end
  Notify('Cash Stealer Loaded.')
  UserInputService.InputBegan:Connect(function(Input)
      if Input.KeyCode == Enum.KeyCode.Q then
          Notify('CashGrab Toggle: ' .. tostring(not _G.CashGrab))
          _G.CashGrab = not _G.CashGrab
          RunService.Heartbeat:Connect(GrabWallet)
      end
  end)
  _G.CashGrabLoaded = true
end


-----------------------------------------------------

